{"ast":null,"code":"var _jsxFileName = \"C:\\\\projeler\\\\contextapp\\\\src\\\\components\\\\PharmacyList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchData } from '../Actions/index';\nimport styles from './PharmacyList.module.css';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport cx from 'classnames';\n\nclass PharmacyList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleValue = e => this.setState({\n      search: e.target.value\n    });\n\n    this.state = {\n      search: ''\n    };\n  }\n\n  componentDidMount() {\n    const country = this.props.country;\n    this.props.fetchData(country);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.country !== prevProps.country) {\n      this.props.fetchData(this.props.country);\n    }\n  }\n\n  render() {\n    const search = this.state.search;\n    console.log(search);\n    const filteredData = this.props.data.filter(item => {\n      return item.eczane_ilce.toLowerCase().includes(search.toLowerCase());\n    });\n    let dataItems;\n\n    if (this.props.data.length > 0) {\n      dataItems = filteredData.map(item => React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        component: PharmacyList,\n        xs: 12,\n        md: 3,\n        className: cx(card, infected),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        color: \"textSecondary\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, item.eczane_adi), React.createElement(Typography, {\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, item.eczane_ilce), React.createElement(Typography, {\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item.eczane_adres), React.createElement(Typography, {\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, item.eczane_telefon)))));\n    } else {\n      dataItems = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Empty\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u0130l\\xE7e \\u0130le S\\u0131rala\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      onChange: this.handleValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, dataItems));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchData\n})(PharmacyList);","map":{"version":3,"sources":["C:\\projeler\\contextapp\\src\\components\\PharmacyList.js"],"names":["React","Component","connect","fetchData","styles","Card","CardContent","Typography","Grid","cx","PharmacyList","handleValue","e","setState","search","target","value","state","componentDidMount","country","props","componentDidUpdate","prevProps","render","console","log","filteredData","data","filter","item","eczane_ilce","toLowerCase","includes","dataItems","length","map","card","infected","eczane_adi","eczane_adres","eczane_telefon","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../Actions/index';\r\nimport  styles from './PharmacyList.module.css';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport cx from 'classnames';\r\n\r\n\r\nclass PharmacyList extends Component {\r\n\r\n  \r\n  handleValue = (e) => this.setState({ search: e.target.value })\r\n\r\n  componentDidMount() {\r\n    const country = this.props.country;\r\n    this.props.fetchData(country);\r\n  } \r\n  componentDidUpdate(prevProps){\r\n      if(this.props.country !== prevProps.country) {\r\n        this.props.fetchData(this.props.country)\r\n      }\r\n  }\r\n  state = {\r\n    search: '',\r\n  }\r\n \r\n    render(){\r\n      \r\n      const { search } = this.state;\r\n      console.log(search);\r\n\r\n      const filteredData = this.props.data.filter( item => {\r\n       return item.eczane_ilce.toLowerCase().includes( search.toLowerCase() )\r\n      } )\r\n      \r\n      let dataItems;\r\n\r\n      if(this.props.data.length > 0) {\r\n        dataItems = filteredData.map(item => (\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={PharmacyList} xs={12} md={3} className={cx(card, infected) }>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>{item.eczane_adi}</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        {item.eczane_ilce}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">{item.eczane_adres}</Typography>\r\n                        <Typography variant=\"body2\">{item.eczane_telefon}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n          </Grid>\r\n        ));\r\n      }else{\r\n        dataItems = <h4>Empty</h4>\r\n      }\r\n \r\n      return(\r\n        <div>\r\n          <h4>İlçe İle Sırala</h4>\r\n          <input type=\"text\" placeholder=\"Search\" onChange={this.handleValue} />\r\n          <div className=\"container\">\r\n          {dataItems}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { data : state.data };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchData })(PharmacyList);"]},"metadata":{},"sourceType":"module"}