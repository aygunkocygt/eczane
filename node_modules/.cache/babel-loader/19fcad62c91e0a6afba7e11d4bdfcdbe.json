{"ast":null,"code":"var _jsxFileName = \"C:\\\\projeler\\\\contextapp\\\\src\\\\components\\\\PharmacyList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchData } from '../Actions/index';\n\nclass PharmacyList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {}\n    };\n  }\n\n  async componentDidMount() {\n    this.props.fetchData();\n    const data = await fetchData();\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    let dot = s;\n    console.log(state.data);\n    let dataItems;\n\n    if (this.props.data.length > 0) {\n      dataItems = this.props.data.map(item => React.createElement(\"ul\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, item.eczane_adi), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, item.eczane_adres)));\n    } else {\n      dataItems = React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Empty\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, dataItems);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchData\n})(PharmacyList);","map":{"version":3,"sources":["C:\\projeler\\contextapp\\src\\components\\PharmacyList.js"],"names":["React","Component","connect","fetchData","PharmacyList","state","data","componentDidMount","props","setState","render","dot","s","console","log","dataItems","length","map","item","id","eczane_adi","eczane_adres","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEpCI,KAFoC,GAE7B;AACLC,MAAAA,IAAI,EAAE;AADD,KAF6B;AAAA;;AAMnC,QAAMC,iBAAN,GAA0B;AACxB,SAAKC,KAAL,CAAWL,SAAX;AAEA,UAAMG,IAAI,GAAG,MAAMH,SAAS,EAA5B;AAEA,SAAKM,QAAL,CAAc;AAAEH,MAAAA,IAAI,EAAEA;AAAR,KAAd;AACD;;AAICI,EAAAA,MAAM,GAAE;AACN,QAAIC,GAAG,GAAGC,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACC,IAAlB;AAEA,QAAIS,SAAJ;;AAEA,QAAG,KAAKP,KAAL,CAAWF,IAAX,CAAgBU,MAAhB,GAAyB,CAA5B,EAA+B;AAC7BD,MAAAA,SAAS,GAAG,KAAKP,KAAL,CAAWF,IAAX,CAAgBW,GAAhB,CAAoBC,IAAI,IAClC;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,UAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACG,YAAV,CAFF,CADU,CAAZ;AAMD,KAPD,MAOK;AACHN,MAAAA,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAZ;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,SADH,CADF;AAKD;;AAtCgC;;AA0CrC,MAAMO,eAAe,GAAGjB,KAAK,IAAI;AAC/B,SAAO;AAAEC,IAAAA,IAAI,EAAGD,KAAK,CAACC;AAAf,GAAP;AACD,CAFD;;AAIA,eAAeJ,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,YAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../Actions/index';\r\n\r\nclass PharmacyList extends Component {\r\n\r\n state= {\r\n   data: {}\r\n }\r\n\r\n  async componentDidMount() {\r\n    this.props.fetchData();\r\n\r\n    const data = await fetchData();\r\n      \r\n    this.setState({ data: data});\r\n  } \r\n  \r\n\r\n  \r\n    render(){\r\n      let dot = s\r\n      console.log(state.data);\r\n      \r\n      let dataItems;\r\n\r\n      if(this.props.data.length > 0) {\r\n        dataItems = this.props.data.map(item => (\r\n          <ul key={item.id}>\r\n            <li>{item.eczane_adi}</li>\r\n            <li>{item.eczane_adres}</li>\r\n          </ul>\r\n        ));\r\n      }else{\r\n        dataItems = <h4>Empty</h4>\r\n      }\r\n\r\n      return(\r\n        <div>\r\n          {dataItems}\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { data : state.data };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchData })(PharmacyList);"]},"metadata":{},"sourceType":"module"}