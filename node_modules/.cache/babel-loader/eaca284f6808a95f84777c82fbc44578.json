{"ast":null,"code":"import _slicedToArray from \"C:\\\\projeler\\\\contextapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\projeler\\\\contextapp\\\\src\\\\components\\\\CountryPicker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { fetchCountries } from '../Actions/index';\n\nconst CountryPicker = ({\n  handleCountryChange\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        fetchedCountries = _useState2[0],\n        setFetchedCountries = _useState2[1];\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries((await fetchCountries()));\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n  return React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(NativeSelect, {\n    onChange: e => handleCountryChange(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, fetchedCountries.map((country, i) => React.createElement(\"option\", {\n    key: i,\n    value: country.plaka,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, country.name))));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["C:\\projeler\\contextapp\\src\\components\\CountryPicker.js"],"names":["React","useState","useEffect","NativeSelect","FormControl","fetchCountries","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","e","target","value","map","country","i","plaka","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,mBAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAAA,oBACCN,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QACxCO,gBADwC;AAAA,QACtBC,mBADsB;;AAG/CP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzBD,MAAAA,mBAAmB,EAAC,MAAMJ,cAAc,EAArB,EAAnB;AACH,KAFD;;AAGAK,IAAAA,QAAQ;AAEX,GANQ,EAMP,CAACD,mBAAD,CANO,CAAT;AAQA,SAEG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAGE,CAAD,IAAOJ,mBAAmB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACML,gBAAgB,CAACM,GAAjB,CAAqB,CAACC,OAAD,EAAUC,CAAV,KAAiB;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAiB,IAAA,KAAK,EAAED,OAAO,CAACE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCF,OAAO,CAACG,IAAhD,CAAtC,CADN,CAFJ,CAFH;AASH,CApBD;;AAsBA,eAAeZ,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchCountries } from '../Actions/index';\r\n\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n       \r\n    },[setFetchedCountries]);\r\n\r\n    return (\r\n        \r\n       <FormControl >\r\n          \r\n           <NativeSelect onChange={(e) => handleCountryChange(e.target.value)}>\r\n                {fetchedCountries.map((country, i) => (<option key={i}  value={country.plaka}>{country.name}</option>))}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;"]},"metadata":{},"sourceType":"module"}